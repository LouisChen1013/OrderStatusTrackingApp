openapi: 3.0.0
# Added by API Auto Mocking Plugin
# servers:
#   - description: SwaggerHub API Auto Mocking
#     url: https://virtserver.swaggerhub.com/LouisChen1013/FoodOrderingAPI/1.0.0
info:
  description: This API provides audit info
  version: "1.0.0"
  title: Audit API
  contact:
    email: chenhonglin1013@gmail.com

paths:
  /add_foods:
    get:
      summary: gets an order report from history
      operationId: app.get_add_order
      description: gets an order report from the event store
      parameters:
        - name: index
          in: query
          description: Gets the order report at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        "200":
          description: Successfully returned a order report event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Order"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payments:
    get:
      summary: gets a payment report from history
      operationId: app.get_payment
      description: gets a payment report from the event store
      parameters:
        - name: index
          in: query
          description: Gets the payment report at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        "200":
          description: Successfully returned a payment report event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Payment"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  schemas:
    Order:
      type: object
      required:
        - order_id
        - customer_id
        - timestamp
        - restaurant
        - order_total
      properties:
        order_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        customer_id:
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0852
        timestamp:
          type: string
          format: date-time
          example: "2016-08-29T09:12:33.001Z"
        restaurant:
          type: string
          example: McDonald's
        order_total:
          type: number
          example: 1235.60
    Payment:
      type: object
      required:
        - payment_id
        - customer_id
        - timestamp
        - restaurant
      properties:
        payment_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0853
        customer_id:
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0854
        timestamp:
          type: string
          format: date-time
          example: "2016-08-29T09:12:33.001Z"
        restaurant:
          type: string
          example: McDonald's
